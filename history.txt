10.11.23
  Посмотрел при помощи сниффера как общается NI VISA с TDS3012  и обнаружил,
что не такой уж и сложный протокол обмена. Обычный TCP/IP на порт 1008 ,
и поверх него какой-то не очень сложный протокол посылающий и принимающий
текстовые ASCII последовательности.

12.11.23
  Порылся в инете, задал вопрос на форуме prist.ru, но ничего внятного не нашел.
Тем не менее решил попытаться сам распутать что там за протокол с тем, чтобы
открыть путь к полноценной работе на linux без использования VISA. Без TDS
работу полноценной считать нельзя.
   В общем, для исследования протокола и организовал проект TekSynapse, имея
в виду, что транспорт TCP буду делать на основе библиотеки Synapse.

13.11.23
  Сделал заготовку для проекта по типу уже несколько раз сделанных мной для
других осциллографических интерфейсов, например HTTP или XStream. Правда
те были стандартными и документированными.
  Сразу удалось уловить, что в основе протокола идет заголовок из четырех байт,
где в первом слове всегда $80 , а во втором длина последующего пакета. В конце
пакета может идти команда ASCII к регистратору или ответ от него.
  На каждый запрос к регистратору всегда идет от него ответ и обычно в последнем
байте ответа содержится длина принятого сообщения.

14.11.23
  Сравнил с помощью сниффера обмен с TDS и с DPO. Оказалось, что сообщения
похожие, хотя и не тождественные. А вот порт оказался другой. Внимательнее
приглядевшись к протоколу инициализации соединения увидел, что в самом
начале идут "переговоры" с портом 111 регистратора. Это порт протокола RPC
(Remote Procedure Call). Этот протокол оказался знаком снифферу и в нем видно,
что идет запрос порта (Get port) и в ответ присылается 1008 для TDS.
   Что еще примечательнее- оказалось, что протокол обмена с портом 1008 тоже
является клоном RPC. Стал более понятен формат сообщений.

21.11.23
  С помощью сниффера изучал форматы запросов-ответов . Нашел в инете кое-то про RPC,
сохранил в этой папке под именем RPC.txt . Вообще-то крайне расплывчато, но кое-что
все-таки применимо.
  Составил файл Port1008.txt с расшифровкой (в меру моего понимания) разных вариантов
взаимодействия по, буду его называть, протоколу TekRPC. В соответствии с такой
расшифровкой составил систему типов и классов для разных вариантов взаимодействия.
Они идут парами: тип TSampleData = record для описания формата посылаемых/принимаемых
данных и класс TSample для работы с такой посылкой. Одним из полей класса является
Data: TSampleData. В нем формируются данные для отсылки и в него счмтывамются данные
после приема.
   Еще одной особенностью протокола является то, что все числа (а почти все данные
являются четырехбайтовыми словами) посылаются/принимаются в формате MSF (Mach
Significant First, сначала старшие разряды), что требует "переворачивания" для
правильной интерпретации. Для этого у меня служат функции swap2 и swap4.

30.11.2023
  Ура! Заработало! Отладил до стадии выполнения команд и получения ответов на
простые запросы.
